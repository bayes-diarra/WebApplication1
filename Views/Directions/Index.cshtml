@model PaginatedList<WebApplication1.Models.Direction>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Nouveau</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-group">
        <p>
            Rercherche par acronyme: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-action="Index">Toutes les directions</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            @*<th>
                Numéro administratif
            </th>*@
            <th>
                Ancien nom de la direction
            </th>
            <th>
                Nom de la direction
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]" >Acronyme de la direction</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                @*<td>
                    @Html.DisplayFor(modelItem => item.NumDirection)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.AncienNomDirection)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NomDirection)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AcronimeDirection)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.NumDirection">Modifier</a> |
                    <a asp-action="Details" asp-route-id="@item.NumDirection">Voir</a> |
                    <a asp-action="Delete" asp-route-id="@item.NumDirection">Supprimer</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Précedent
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Suivant
</a>